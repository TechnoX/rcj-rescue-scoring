worker_processes auto;
worker_rlimit_nofile 100000;

events {
    worker_connections 2048;
    multi_accept on;
    use epoll;
}

http {
    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    access_log off;
    error_log /var/log/nginx/error.log crit;
    keepalive_timeout 100;
    client_header_timeout 100;
    client_body_timeout 100;
    reset_timedout_connection on;
    send_timeout 100;
    limit_conn_zone $binary_remote_addr zone=addr:5m;
    limit_conn addr 1000;
    #include /etc/nginx/mime.types;
    #default_type text/html;
    charset UTF-8;
    gzip on;
    gzip_http_version 1.0;
    gzip_disable "msie6";
    gzip_proxied any;
    gzip_min_length 1024;
    gzip_comp_level 6;
    #gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/json;
    open_file_cache max=100000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

upstream backend_node {
    #ip_hash;
    server 127.0.0.1:3000;
#    server 127.0.0.1:3001;
#    server 127.0.0.1:3002;
#    server 127.0.0.1:3003;
}

server {
    listen       80;

    client_max_body_size 500M;

    access_log  /opt/rcj-scoring-system/logs/nginx-access.log;

    location / {
        root   /opt/rcj-scoring-system/public;
        index  index.html index.htm;

        # 存在するファイルパスが指定された場合はそのまま Nginx で処理
        if ( -f $request_filename ) {
            break;
        }

        # 存在しないファイルパスが指定された場合は backend_node で処理
        if ( !-f $request_filename ) {
            proxy_pass http://backend_node;
            break;
        }
    }

    location /socket.io/ {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_pass http://backend_node;
    }

}


}
